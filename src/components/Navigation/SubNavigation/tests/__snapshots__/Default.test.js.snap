// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<withRouter(SubNavigation) /> rendered correctly with Default fixture 1`] = `
<withRouter(SubNavigation)
  item={
    Object {
      "badge": "FREE",
      "items": Array [
        Object {
          "key": "MAIN",
          "label": "Main",
          "route": "/parent",
        },
        Object {
          "key": "SECONDARY",
          "label": "Secondary",
          "route": "/parent/secondary",
        },
      ],
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
      Object {
        "label": "Location B",
        "value": "Location B",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  >
    <SubNavigation
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "mocked",
              "pathname": "/feedback",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "mocked",
            "pathname": "/feedback",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      item={
        Object {
          "badge": "FREE",
          "items": Array [
            Object {
              "key": "MAIN",
              "label": "Main",
              "route": "/parent",
            },
            Object {
              "key": "SECONDARY",
              "label": "Secondary",
              "route": "/parent/secondary",
            },
          ],
          "key": "PARENT",
          "label": "Parent",
          "route": "/parent",
          "title": "Parent title",
        }
      }
      loading={false}
      location={
        Object {
          "hash": "",
          "key": "mocked",
          "pathname": "/feedback",
          "search": "",
          "state": undefined,
        }
      }
      locations={
        Array [
          Object {
            "label": "Location A",
            "value": "Location A",
          },
          Object {
            "label": "Location B",
            "value": "Location B",
          },
        ]
      }
      logoutRoute="/logout"
      match={
        Object {
          "isExact": false,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
    >
      <div
        className="bar"
      >
        <div
          className="top"
        >
          <h2
            className="heading"
          >
            Parent title
          </h2>
          <span
            className="control selector"
          >
            <SingleSelect
              disabled={false}
              error=""
              fill={true}
              id="locationSelector"
              inline={false}
              name="location"
              onBeforeOpen={[Function]}
              onChange={[Function]}
              onClose={[Function]}
              options={
                Array [
                  Object {
                    "label": "Location A",
                    "value": "Location A",
                  },
                  Object {
                    "label": "Location B",
                    "value": "Location B",
                  },
                ]
              }
              value={null}
            >
              <div
                className="outer fill"
              >
                <div
                  className="relative"
                >
                  <div
                    className="container fill"
                  >
                    <Select
                      arrowRenderer={[Function]}
                      autosize={true}
                      backspaceRemoves={true}
                      backspaceToRemoveMessage="Press backspace to remove {label}"
                      className="select"
                      clearAllText="Clear all"
                      clearRenderer={[Function]}
                      clearValueText="Clear value"
                      clearable={true}
                      closeOnSelect={true}
                      deleteRemoves={true}
                      delimiter=","
                      disabled={false}
                      escapeClearsValue={true}
                      filterOptions={[Function]}
                      id="locationSelector"
                      ignoreAccents={true}
                      ignoreCase={true}
                      inputProps={Object {}}
                      isLoading={false}
                      joinValues={true}
                      labelKey="label"
                      matchPos="any"
                      matchProp="any"
                      menuBuffer={0}
                      menuRenderer={[Function]}
                      multi={false}
                      name="location"
                      noResultsText="No results found"
                      onBlurResetsInput={true}
                      onChange={[Function]}
                      onClose={[Function]}
                      onCloseResetsInput={true}
                      onOpen={[Function]}
                      onSelectResetsInput={true}
                      openOnClick={true}
                      optionComponent={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "Location A",
                            "value": "Location A",
                          },
                          Object {
                            "label": "Location B",
                            "value": "Location B",
                          },
                        ]
                      }
                      pageSize={5}
                      placeholder="Select..."
                      removeSelected={true}
                      required={false}
                      rtl={false}
                      scrollMenuIntoView={true}
                      searchable={true}
                      simpleValue={false}
                      tabSelectsValue={true}
                      trimFilter={true}
                      value={null}
                      valueComponent={[Function]}
                      valueKey="value"
                      valueRenderer={[Function]}
                    >
                      <div
                        className="Select select is-clearable is-searchable Select--single"
                      >
                        <input
                          disabled={false}
                          name="location"
                          type="hidden"
                          value=""
                        />
                        <div
                          className="Select-control"
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                        >
                          <span
                            className="Select-multi-value-wrapper"
                            id="react-select-2--value"
                          >
                            <div
                              className="Select-placeholder"
                            >
                              Select...
                            </div>
                            <AutosizeInput
                              aria-activedescendant="react-select-2--value"
                              aria-expanded="false"
                              aria-haspopup="false"
                              aria-owns=""
                              className="Select-input"
                              id="locationSelector"
                              injectStyles={true}
                              minWidth="5"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              required={false}
                              role="combobox"
                              value=""
                            >
                              <div
                                className="Select-input"
                                style={
                                  Object {
                                    "display": "inline-block",
                                  }
                                }
                              >
                                <input
                                  aria-activedescendant="react-select-2--value"
                                  aria-expanded="false"
                                  aria-haspopup="false"
                                  aria-owns=""
                                  id="locationSelector"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  role="combobox"
                                  style={
                                    Object {
                                      "boxSizing": "content-box",
                                      "width": "5px",
                                    }
                                  }
                                  value=""
                                />
                                <div
                                  style={
                                    Object {
                                      "height": 0,
                                      "left": 0,
                                      "overflow": "scroll",
                                      "position": "absolute",
                                      "top": 0,
                                      "visibility": "hidden",
                                      "whiteSpace": "pre",
                                    }
                                  }
                                />
                              </div>
                            </AutosizeInput>
                          </span>
                          <span
                            className="Select-arrow-zone"
                            onMouseDown={[Function]}
                          >
                            <span
                              className="Select-arrow"
                              onMouseDown={[Function]}
                            />
                          </span>
                        </div>
                      </div>
                    </Select>
                    <Icon
                      className="caret"
                      name="DropDown"
                    >
                      <DropDown
                        className="icon caret"
                      >
                        <svg
                          className="icon caret"
                          version="1.1"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            transform="translate(15.000000, 7.000000) rotate(90.000000)"
                          >
                            <path
                              d="M2,6.93247919 L2,-0.932479194 C2,-1.20862157 2.22385763,-1.43247919 2.5,-1.43247919 C2.61696825,-1.43247919 2.7302347,-1.39147108 2.8200922,-1.31658983 L7.53906723,2.61588936 C7.75120568,2.7926714 7.77986771,3.10795375 7.60308567,3.3200922 C7.58372606,3.34332373 7.56229876,3.36475103 7.53906723,3.38411064 L2.8200922,7.31658983 C2.60795375,7.49337187 2.2926714,7.46470984 2.11588936,7.25257139 C2.04100811,7.16271389 2,7.04944745 2,6.93247919 Z"
                            />
                          </g>
                        </svg>
                      </DropDown>
                    </Icon>
                  </div>
                </div>
              </div>
            </SingleSelect>
          </span>
          <span
            className="control logout"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navLink"
              key="logout"
              target="_self"
              title="Logout"
              to="/logout"
            >
              <Route
                path="/logout"
              >
                <Link
                  aria-current={false}
                  className="navLink"
                  replace={false}
                  target="_self"
                  title="Logout"
                  to="/logout"
                >
                  <a
                    aria-current={false}
                    className="navLink"
                    href="/logout"
                    onClick={[Function]}
                    target="_self"
                    title="Logout"
                  >
                    <Icon
                      className="icon"
                      name="Logout"
                    >
                      <Logout
                        className="icon icon"
                      >
                        <svg
                          className="icon icon"
                          version="1.1"
                          viewBox="0 1 16 16"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M 7.5 0.66601562 C 6.6774686 0.66601562 6 1.3434842 6 2.1660156 L 6 5.1660156 L 7 5.1660156 L 7 2.1660156 C 7 1.884547 7.2185314 1.6660156 7.5 1.6660156 L 14.5 1.6660156 C 14.781469 1.6660156 15 1.884547 15 2.1660156 L 15 14.166016 C 15 14.447484 14.781469 14.666016 14.5 14.666016 L 7.5 14.666016 C 7.2185314 14.666016 7 14.447484 7 14.166016 L 7 11.166016 L 6 11.166016 L 6 14.166016 C 6 14.988547 6.6774686 15.666016 7.5 15.666016 L 14.5 15.666016 C 15.322531 15.666016 16 14.988547 16 14.166016 L 16 2.1660156 C 16 1.3434842 15.322531 0.66601562 14.5 0.66601562 L 7.5 0.66601562 z M 3.1464844 4.8125 L -0.20703125 8.1660156 L 3.1464844 11.519531 L 3.8535156 10.8125 L 1.7070312 8.6660156 L 11.5 8.6660156 L 11.5 7.6660156 L 1.7070312 7.6660156 L 3.8535156 5.5195312 L 3.1464844 4.8125 z "
                            transform="translate(0,1)"
                          />
                        </svg>
                      </Logout>
                    </Icon>
                    Logout
                  </a>
                </Link>
              </Route>
            </NavLink>
          </span>
        </div>
        <div
          className="items"
        >
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="MAIN"
            title="Main"
            to="/parent"
          >
            <Route
              exact={true}
              path="/parent"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Main"
                to="/parent"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent"
                  onClick={[Function]}
                  title="Main"
                >
                  <span>
                    Main
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="SECONDARY"
            title="Secondary"
            to="/parent/secondary"
          >
            <Route
              exact={true}
              path="/parent/secondary"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Secondary"
                to="/parent/secondary"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent/secondary"
                  onClick={[Function]}
                  title="Secondary"
                >
                  <span>
                    Secondary
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
        </div>
      </div>
    </SubNavigation>
  </Route>
</withRouter(SubNavigation)>
`;
